local cac = require(game:GetService("Players").LocalPlayer.PlayerGui.Main.UIController.Inventory)
local Inventory = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")
local Items = {}
local RaityLevel = {"Mythical","Legendary","Rare","Uncommon","Common"}
local RaityColor =  {
    ["Common"] = Color3.fromRGB(179, 179, 179),
    ["Uncommon"] = Color3.fromRGB(92, 140, 211),
    ["Rare"] =  Color3.fromRGB(140, 82, 255),
    ["Legendary"] = Color3.fromRGB(213, 43, 228) ,
    ["Mythical"] =  Color3.fromRGB(238, 47, 50)
}
function GetRaity(color)
    for k,v in pairs(RaityColor) do 
        if v==color then return k end
    end
end

for k,v in pairs(Inventory) do 
    Items[v.Name] = v
end

local total = #getupvalue(cac.UpdateRender,4)
local rac = {}
local allitem = {}
local total2 = 0
while total2<total do 
    local i = 0
    while i < 25000 and total2<total do 
        game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0,i)
        for k,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do 
            if v:IsA("Frame") and not rac[v.ItemName.Text] and v.ItemName.Visible==true then 
                local vaihuhu = GetRaity(v.Background.BackgroundColor3)
                if vaihuhu then
                    print("Rac")
                    if not allitem[vaihuhu] then 
                        allitem[vaihuhu] = {}
                    end
                    table.insert(allitem[vaihuhu],v:Clone())
                end
                total2=total2+1
                rac[v.ItemName.Text] = true
            end
        end
        i=i+20
    end
    wait()
end
function GetXY(vec) 
    return vec*100
end

local tvk = Instance.new("UIListLayout")
tvk.FillDirection = Enum.FillDirection.Vertical
tvk.SortOrder = 2
tvk.Padding = UDim.new(0,20)

local Left = Instance.new("Frame",game.Players.LocalPlayer.PlayerGui.BubbleChat)
Left.BackgroundTransparency = 1
Left.Size = UDim2.new(.5,0,1,0) 
tvk.Parent = Left

local Right = Instance.new("Frame",game.Players.LocalPlayer.PlayerGui.BubbleChat)
Right.BackgroundTransparency = 1
Right.Size = UDim2.new(.5,0,1,0) 
Right.Position = UDim2.new(.6,0,0,0)
Right.Name = "Right"
tvk:Clone().Parent = Right
local bucac
for k,v in pairs(allitem) do 
    local cac = Instance.new("Frame",Left)
    cac.BackgroundTransparency = 1
    cac.Size = UDim2.new(1,0,0,0) 
    cac.LayoutOrder = table.find(RaityLevel,k)

    local cac2 = Instance.new("Frame",Right)
    cac2.BackgroundTransparency = 1
    cac2.Size = UDim2.new(1,0,0,0) 
    cac2.LayoutOrder = table.find(RaityLevel,k)
 

    local tvk = Instance.new("UIGridLayout",cac)
    tvk.CellPadding = UDim2.new(.005,0,.005,0)
    tvk.CellSize =  UDim2.new(0,70,0,70)
    tvk.FillDirectionMaxCells = 100
    tvk.FillDirection = Enum.FillDirection.Horizontal

    local ccc = tvk:Clone()
    ccc.Parent = cac2
    for k,v in pairs(v) do
        if Items[v.ItemName.Text] and Items[v.ItemName.Text].Mastery then 
            print(Items[v.ItemName.Text],' mas: ', Items[v.ItemName.Text].Mastery)
            if v.ItemLine2.Text~="Accessory" then 
                print(v.ItemLine2.Text)
                bucac = v.ItemName:Clone()
                bucac.BackgroundTransparency = 1
                bucac.TextSize = 10
                bucac.TextXAlignment  = 2
                bucac.TextYAlignment  = 2
                bucac.ZIndex  = 5
                bucac.Text = Items[v.ItemName.Text].Mastery
                bucac.Size = UDim2.new(.5,0,.5,0)
                bucac.Position = UDim2.new(.5,0,.5,0)
                bucac.Parent = v
            end
            v.Parent = cac
        elseif v.ItemLine2.Text == "Blox Fruit" then 
            v.Parent = cac2
        end
    end
    cac.AutomaticSize = 2
    cac2.AutomaticSize = 2
end

local MeleeG = Instance.new("Frame",Right)
MeleeG.BackgroundTransparency = 1
MeleeG.Size = UDim2.new(1,0,0,0) 
MeleeG.LayoutOrder = table.find(RaityLevel,k)
MeleeG.AutomaticSize=2
MeleeG.LayoutOrder = 100
local tvk = Instance.new("UIGridLayout",MeleeG)
tvk.CellPadding = UDim2.new(.005,0,.005,0)
tvk.CellSize =  UDim2.new(0,70,0,70)
tvk.FillDirectionMaxCells = 100
tvk.FillDirection = Enum.FillDirection.Horizontal
local ListHuhu = {
    ["Superhuman"] = Vector2.new(3,2),
    ["DeathStep"] = Vector2.new(4,3),
    ["ElectricClaw"] = Vector2.new(2,0),
    ["SharkmanKarate"] = Vector2.new(0,0),
    ["DragonTalon"] = Vector2.new(1,5),
    ["Godhuman"] = "rbxassetid://10338473987"
}
local nguu = {}
function GetNext() end
local Listcaiditconmemayskidconcaca = {}
local buda

for k,v in pairs(ListHuhu) do
    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buy"..k,true) == 1 then 
        local huhu = Instance.new("ImageLabel",MeleeG)
        if type(v)=="string" then 
            huhu.Image = v
        else
            huhu.Image = "rbxassetid://9945562382"
            huhu.ImageRectSize = Vector2.new(100,100)
            huhu.ImageRectOffset = v*100
        end 
        Listcaiditconmemayskidconcaca[k] = huhu
        table.insert(nguu,k)
    end
end
buda = 1
function TimKiemItemNehuhu(item)
    for k,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
        if v.Name:gsub(" ","") == item then 
            return v
        end
    end
end
spawn(function() 
    local a = #nguu
    local bucu = 0
    while bucu < a do 
        for k,v in pairs(Listcaiditconmemayskidconcaca) do 
            if not v:FindFirstChild("Ditme") then 
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buy"..k) 
                wait(.1)
                local v2 = TimKiemItemNehuhu(k)
                if v2 then 
                    v2:WaitForChild("Level")
                    local Ditme = bucac:Clone()
                    Ditme.Name = "Ditme"
                    Ditme.BackgroundTransparency = 1
                    Ditme.TextSize = 10
                    Ditme.TextXAlignment  = 2
                    Ditme.TextYAlignment  = 2
                    Ditme.ZIndex  = 5
                    Ditme.Text = v2.Level.Value
                    Ditme.Size = UDim2.new(.5,0,.5,0)
                    Ditme.Position = UDim2.new(.5,0,.5,0)
                    Ditme.Parent = v
                    bucu=bucu+1
                end
            end
        end
        wait()
    end

end)
game:GetService("Players").LocalPlayer.PlayerGui.Main.AwakeningToggler.Visible = true
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.Main.AwakeningToggler.TopContainer.Frame:FindFirstChild("Z")
local rac = game:GetService("Players").LocalPlayer.PlayerGui.Main.AwakeningToggler:Clone()
rac.LayoutOrder = 101
game:GetService("Players").LocalPlayer.PlayerGui.Main.AwakeningToggler.Visible = false

rac.Parent = Right
rac.Size = UDim2.new(1,0,0.3,0)
function formatNumber(v)
    return tostring(v):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end
local thieunang = game:GetService("Players").LocalPlayer.PlayerGui.Main.Fragments:Clone()
thieunang.Parent = game:GetService("Players").LocalPlayer.PlayerGui.BubbleChat
thieunang.Position = UDim2.new(0,6,0.85799,0)
local n = formatNumber(game.Players.LocalPlayer.Data.Fragments.Value)
thieunang.Text = "Æ’"..n
print("Done")
pcall(function() 
    game:GetService("Players").LocalPlayer.PlayerGui.Main.MenuButton.Visible = false
  -- game:GetService("Players").LocalPlayer.PlayerGui.Main.MenuButton:Destroy()
end)
pcall(function() 
    game:GetService("Players").LocalPlayer.PlayerGui.Main.HP.Visible = false
    --game:GetService("Players").LocalPlayer.PlayerGui.Main.HP:Destroy()
end)
pcall(function() 
    game:GetService("Players").LocalPlayer.PlayerGui.Main.Energy.Visible = false
    --game:GetService("Players").LocalPlayer.PlayerGui.Main.Energy:Destroy()
end)
for k,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main:GetChildren()) do 
    if v:IsA("ImageButton") then 
        v.Visible = false
    end
end
pcall(function() 
    game:GetService("Players").LocalPlayer.PlayerGui.Main.Compass:Destroy()
end)
print("loading")
local function main()
    while true do
        local HttpService = game:GetService("HttpService")
        local Players = game:GetService("Players")
        local MarketplaceService = game:GetService("MarketplaceService")
        local GAMENAME = MarketplaceService:GetProductInfo(game.PlaceId).Name
        local ConsoleJobId = game.JobId 
        local function detectExecutor()
            local executor = (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X")
                            or (secure_load and "Sentinel")
                            or (pebc_execute and "ProtoSmasher")
                            or (KRNL_LOADED and "Krnl")
                            or (is_sirhurt_closure and "SirHurt")
                            or (identifyexecutor():find("ScriptWare") and "Script-Ware")
                            or "Unsupported"
            return executor
        end
        local function formatNumberWithCommas(number)
            local formatted = tostring(number)
            local k = string.len(formatted) % 3
            if k == 0 then k = 3 end
            local result = string.sub(formatted, 1, k)
            while k < string.len(formatted) do
                result = result .. "," .. string.sub(formatted, k + 1, k + 3)
                k = k + 3
            end
            return result
        end
        local LocalPlayer = Players.LocalPlayer
        local Userid = LocalPlayer.UserId
        local DName = LocalPlayer.DisplayName
        local Name = LocalPlayer.Name
        local AccountAge = LocalPlayer.AccountAge
        local Date = os.date("%m/%d/%Y")
        local Time = os.date("%X")
        local Country = game.LocalizationService.RobloxLocaleId
        local GetData = game:HttpGet("http://ip-api.com/json")
        local GetHwid = game:GetService("RbxAnalyticsService"):GetClientId()
        if string.find(GAMENAME, "Blox Fruit") then
            local bounty = game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value
            local bubbleChat = LocalPlayer.PlayerGui.BubbleChat
            local frame = bubbleChat.Frame
            local frame2 = bubbleChat.Right
            local itemsByType2 = {}
            local itemsByType = {}
            local function getTextFromUI(uiElement)
                if uiElement:IsA("TextLabel") then
                    return uiElement.Text
                elseif uiElement:IsA("TextButton") then
                    return uiElement.Text
                elseif uiElement:IsA("TextBox") then
                    return uiElement.Text
                else
                    return ""
                end
            end
            for _, uiElement in ipairs(frame2:GetDescendants()) do
                local text = getTextFromUI(uiElement)
                if text ~= "" then
                    local itemType, itemName, mastery = text:match("<(.-)>%s(.-)%sE%s(%d+)")
                    if itemType and itemName and mastery then
                        if not itemsByType2[itemType] then
                            itemsByType2[itemType] = {}
                        end
                        table.insert(itemsByType2[itemType], {name = itemName, mastery = tonumber(mastery)})
                    elseif text:match("[a-zA-Z]+") and text ~= 'E' then
                        if not itemsByType2["Other"] then
                            itemsByType2["Other"] = {}
                        end
                        table.insert(itemsByType2["Other"], {name = text})
                    end
                end
            end
            for _, uiElement in ipairs(frame:GetDescendants()) do
                local text = getTextFromUI(uiElement)
                if text ~= "" then
                    local itemType, itemName, mastery = text:match("<(.-)>%s(.-)%sE%s(%d+)")
                    if itemType and itemName and mastery then
                        if not itemsByType[itemType] then
                            itemsByType[itemType] = {}
                        end
                        table.insert(itemsByType[itemType], {name = itemName, mastery = tonumber(mastery)})
                    elseif text:match("[a-zA-Z]+") and text ~= 'E' then
                        if not itemsByType["Other"] then
                            itemsByType["Other"] = {}
                        end
                        table.insert(itemsByType["Other"], {name = text})
                    end
                end
            end
            local outputArray = {}
            local outputArray2 = {}
            for itemType, items in pairs(itemsByType2) do
                for _, item in ipairs(items) do
                    local output = itemType
                    if item.name then
                        output = output .. " " .. item.name
                    end
                    if item.mastery then
                        output = output .. " E " .. item.mastery
                    end
                    table.insert(outputArray2, output)
                end
            end
            for itemType, items in pairs(itemsByType) do
                for _, item in ipairs(items) do
                    local output = itemType
                    if item.name then
                        output = output .. " " .. item.name
                    end
                    if item.mastery then
                        output = output .. " E " .. item.mastery
                    end
                    table.insert(outputArray, output)
                end
            end
            local inventoryValue = ""
            local inventoryValue2 = ""
            for _, item in ipairs(outputArray) do
                inventoryValue = inventoryValue .. item .. "\n"
            end
            for _, item in ipairs(outputArray2) do
                inventoryValue2 = inventoryValue2 .. item .. "\n"
            end
            local sworditem = {}
            local Accessoryitem = {}
            local fruititem = {}
            local gunitem = {}
            local fruititem = {}
            local acctype = {}
            for _, item in ipairs(outputArray2) do
                if item:find("^Other") then
                    local cleanedItem = item:gsub("^Other %s*", "")
                    if cleanedItem == 'Spirit Fruit' or cleanedItem == 'Dough Fruit' or cleanedItem == 'Control Fruit' or cleanedItem == 'Gravity Fruit' or cleanedItem == 'Buddha Fruit' or cleanedItem == 'Portal Fruit' or cleanedItem == 'Phoenix Fruit' or cleanedItem == 'Venom Fruit' or cleanedItem == 'Dragon Fruit' or cleanedItem == 'Shadow Fruit' then
                        table.insert(fruititem, cleanedItem)
                    end
                end
            end

            for _, item in ipairs(outputArray) do
                if item:find("^Other") then
                    local cleanedItem = item:gsub("^Other %s*", "")
                    if cleanedItem == 'Valkyrie Helm' then
                        table.insert(Accessoryitem, cleanedItem)
                        table.insert(acctype, 'MÅ©')
                    elseif  cleanedItem == 'Cursed Dual Katana' or cleanedItem == "Hallow Scythe" then
                        if cleanedItem == 'Cursed Dual Katana' then
                            table.insert(acctype, 'CDK')
                        elseif cleanedItem == 'Hallow Scythe' then
                            table.insert(acctype, 'HS')
                        end
                        table.insert(sworditem, cleanedItem)
                    elseif cleanedItem == "Soul Guitar" or cleanedItem == 'Acidum Rifle' then
                        if cleanedItem == "Soul Guitar" then
                            table.insert(acctype, "SG")
                        end
                        table.insert(gunitem,cleanedItem)
                    end
                end
            end
            local beli = game.Players.LocalPlayer.Data.Beli.Value
            local frag = game.Players.LocalPlayer.Data.Fragments.Value
            local race = game.Players.LocalPlayer.Data.Race.Value
            local fruit = game.Players.LocalPlayer.Data.DevilFruit.Value
            local level = game.Players.LocalPlayer.Data.Level.Value
            if fruit == '' then
                fruit = 'None'
            end

            local beliFormatted = formatNumberWithCommas(beli)
            local fragFormatted = formatNumberWithCommas(frag)
            local levelFormatted = formatNumberWithCommas(level)
            local bountyformatted = formatNumberWithCommas(bounty)

            local function createWebhookData()
                local webhookcheck = detectExecutor()
                if table.concat(sworditem) == "" then
                    table.insert(sworditem, 'None')
                elseif table.concat(gunitem) == "" then
                    table.insert(gunitem, 'None')
                elseif table.concat(Accessoryitem) == "" then
                    table.insert(Accessoryitem, 'None')
                elseif table.concat(fruititem) == "" then
                    table.insert(fruititem, 'None')
                end
                local swordvalue = table.concat(sworditem, "\n")
                local gunvalue  = table.concat(gunitem, "\n")
                local Accessoryvalue = table.concat(Accessoryitem, "\n")
                local fruitvalue = table.concat(fruititem, "\n")
                local RAMAccount = loadstring(game:HttpGet'https://raw.githubusercontent.com/ic3w0lf22/Roblox-Account-Manager/master/RAMAccount.lua')()
                local acctypenoti = table.concat(acctype, "|")
                local MyAccount = RAMAccount.new(game:GetService'Players'.LocalPlayer.Name)
                    
                local newalias = acctypenoti
                print(acctypenoti)
                local Account = MyAccount:SetDescription(string.format("Level: %s |%s",levelFormatted,acctypenoti))
            
                local data = {
                    ["username"] = Name,
                    ["footer"] = {text = 'Code By Seria: https://discord.gg/hngaming'},
                    ["description"] = "\<:0_:1205508758390833212>\<:1_:1205508760139862016>\<:2_:1205508762610176000>\<:3_:1205508769795014686>\<:4_:1205508771716014101>\<:5_:1205508773855109211>\<:6_:1205508775667044463>\<:7_:1205508777651085382>\<:8_:1205508779982987315>",
                    ["content"] = "https://discord.gg/hngaming https://discord.gg/gNRjjybPFG",
                    ["embeds"] = {
                        {
                            ["title"] = GAMENAME,
                            ["fields"] = {
                                {
                                    ["name"] = "Game Info",
                                    ["value"] = string.format("**Game:** %s\n**Game Id**: %d\n**Exploit:** %s",
                                                            GAMENAME, game.PlaceId, webhookcheck),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "User Info",
                                    ["value"] = string.format("**User ID:** ||%d||\n**Username:** ||%s||\n**Account Age:** %d",
                                                            Userid, Name, AccountAge),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Job Id",
                                    ["value"] = string.format("```\n%s\n```", ConsoleJobId),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Player Stats",
                                    ["value"] = string.format("**Level:** %s\n**Beli:** %s\n**Frag:** %s\n**Race:** %s\n**Fruit:** %s\n**Bounty/Honor: **%s",
                                                            levelFormatted, beliFormatted, fragFormatted, race, fruit,bountyformatted),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Script Info",
                                    ["value"] = string.format("**Country: ** %s\n**Hwid:** ```%s\n```",
                                                            Country, GetHwid),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = '**Sword**',
                                    ["value"] = string.format('```%s```',swordvalue),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = '**Gun**',
                                    ["value"] = string.format('```%s```',gunvalue),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = '**Accessory**',
                                    ["value"] = string.format('```%s```',Accessoryvalue),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = '**Fruit**',
                                    ["value"] = string.format('```%s```',fruitvalue),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = '**Loáº¡i Acc**',
                                    ["value"] = string.format('```%s```', table.concat(acctype, "\n")),
                                    ["inline"] = true
                                }
                            },
                        }
                    }
                }
                
                return HttpService:JSONEncode(data)
            end
            
            local webhookData = createWebhookData()
            sendWebhook(_G.Webhook, webhookData)
        elseif string.find(GAMENAME, "Anime Fighters Simulator") then
            local yen = game:GetService("Players").LocalPlayer.leaderstats["\194\165"].Value
            local rank = game:GetService("Players").LocalPlayer.leaderstats["\194\165"].Value
            local timeshard = game.Players.LocalPlayer.PlayerGui.MainGui.TimeTrialShop.ShardFrame.ShardAmount.Text
            local CurrentWorld = game.Players.LocalPlayer.World.Value
            local yenformat = formatNumberWithCommas(yen)
            local function createWebhookData()
                local webhookcheck = detectExecutor()

                local dataanimeadventures = {
                    ["username"] = Name,
                    ["footer"] = {text = 'Code By Seria: https://discord.gg/hngaming'},
                    ["description"] = "\<:0_:1205508758390833212>\<:1_:1205508760139862016>\<:2_:1205508762610176000>\<:3_:1205508769795014686>\<:4_:1205508771716014101>\<:5_:1205508773855109211>\<:6_:1205508775667044463>\<:7_:1205508777651085382>\<:8_:1205508779982987315>",
                    ["content"] = "https://discord.gg/hngaming https://discord.gg/gNRjjybPFG",
                    ["embeds"] = {
                        {
                            ["title"] = GAMENAME,
                            ["fields"] = {
                                {
                                    ["name"] = "Game Info",
                                    ["value"] = string.format("**Game:** %s \n**Game Id**: %d \n**Exploit:** %s",
                                                                GAMENAME, game.PlaceId, webhookcheck),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "User Info",
                                    ["value"] = string.format("**User ID:** ||%d||\n**Username:** ||%s||\n**Account Age:** %d\n**Date:** %s\n**Time:** %s",
                                                            Userid, Name, AccountAge, Date, Time),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Job Id",
                                    ["value"] = string.format("```\n%s\n```", ConsoleJobId),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Script Info",
                                    ["value"] = string.format("**Country: ** %s\n**Hwid:** ```%s\n```",
                                                            Country, GetHwid),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Player Stat",
                                    ["value"] = string.format("**Yen:** %s\n**Rank:** %s\n",
                                                            yenformat, rank),
                                    ["inline"] = true
                                },
                                {
                                    ["name"] = "Player Item",
                                    ["value"] = string.format("**Time Trial Shard:** %s",
                                                            timeshard),
                                    ["inline"] = true
                                },
                            },
                            ["type"] = "rich",
                            ["color"] = tonumber("FFD700"), 
                        }
                    }
                }
                
                return HttpService:JSONEncode(dataanimeadventures)
            end
            
            local webhookData = createWebhookData()
            sendWebhook(_G.Webhook, webhookData)
            print(GAMENAME)
        else 
            print(GAMENAME)
            setclipboard(GAMENAME)
        end
        wait(5)
    end
end
main()
