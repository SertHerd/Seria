print("code by seria")
local function main()
    while true do
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local GAMENAME = MarketplaceService:GetProductInfo(game.PlaceId).Name
local ConsoleJobId = game.JobId 
local function detectExecutor()
    local executor = (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X")
                    or (secure_load and "Sentinel")
                    or (pebc_execute and "ProtoSmasher")
                    or (KRNL_LOADED and "Krnl")
                    or (is_sirhurt_closure and "SirHurt")
                    or (identifyexecutor():find("ScriptWare") and "Script-Ware")
                    or "Unsupported"
    return executor
end
local function formatNumberWithCommas(number)
    local formatted = tostring(number)
    local k = string.len(formatted) % 3
    if k == 0 then k = 3 end
    local result = string.sub(formatted, 1, k)
    while k < string.len(formatted) do
        result = result .. "," .. string.sub(formatted, k + 1, k + 3)
        k = k + 3
    end
    return result
end
local LocalPlayer = Players.LocalPlayer
local Userid = LocalPlayer.UserId
local DName = LocalPlayer.DisplayName
local Name = LocalPlayer.Name
local AccountAge = LocalPlayer.AccountAge
local Date = os.date("%m/%d/%Y")
local Time = os.date("%X")
local Country = game.LocalizationService.RobloxLocaleId
local GetData = game:HttpGet("http://ip-api.com/json")
local GetHwid = game:GetService("RbxAnalyticsService"):GetClientId()
if ping == 'here' then
    ping2 = '@here'
elseif ping == 'everyone' then
    ping2 = '@everyone'
else 
    ping2 = string.format('<@%s',ping)
end
if string.find(GAMENAME, "Blox Fruit") then
    local bounty = game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value
    local bubbleChat = LocalPlayer.PlayerGui.BubbleChat
    local frame = bubbleChat.Frame
    local frame2 = bubbleChat.Right
    local itemsByType2 = {}
    local itemsByType = {}
    local function getTextFromUI(uiElement)
        if uiElement:IsA("TextLabel") then
            return uiElement.Text
        elseif uiElement:IsA("TextButton") then
            return uiElement.Text
        elseif uiElement:IsA("TextBox") then
            return uiElement.Text
        else
            return ""
        end
    end
    for _, uiElement in ipairs(frame2:GetDescendants()) do
        local text = getTextFromUI(uiElement)
        if text ~= "" then
            local itemType, itemName, mastery = text:match("<(.-)>%s(.-)%sE%s(%d+)")
            if itemType and itemName and mastery then
                if not itemsByType2[itemType] then
                    itemsByType2[itemType] = {}
                end
                table.insert(itemsByType2[itemType], {name = itemName, mastery = tonumber(mastery)})
            elseif text:match("[a-zA-Z]+") and text ~= 'E' then
                if not itemsByType2["Other"] then
                    itemsByType2["Other"] = {}
                end
                table.insert(itemsByType2["Other"], {name = text})
            end
        end
    end
    for _, uiElement in ipairs(frame:GetDescendants()) do
        local text = getTextFromUI(uiElement)
        if text ~= "" then
            local itemType, itemName, mastery = text:match("<(.-)>%s(.-)%sE%s(%d+)")
            if itemType and itemName and mastery then
                if not itemsByType[itemType] then
                    itemsByType[itemType] = {}
                end
                table.insert(itemsByType[itemType], {name = itemName, mastery = tonumber(mastery)})
            elseif text:match("[a-zA-Z]+") and text ~= 'E' then
                if not itemsByType["Other"] then
                    itemsByType["Other"] = {}
                end
                table.insert(itemsByType["Other"], {name = text})
            end
        end
    end
    local outputArray = {}
    local outputArray2 = {}
    for itemType, items in pairs(itemsByType2) do
        for _, item in ipairs(items) do
            local output = itemType
            if item.name then
                output = output .. " " .. item.name
            end
            if item.mastery then
                output = output .. " E " .. item.mastery
            end
            table.insert(outputArray2, output)
        end
    end
    for itemType, items in pairs(itemsByType) do
        for _, item in ipairs(items) do
            local output = itemType
            if item.name then
                output = output .. " " .. item.name
            end
            if item.mastery then
                output = output .. " E " .. item.mastery
            end
            table.insert(outputArray, output)
        end
    end
    local inventoryValue = ""
    local inventoryValue2 = ""
    for _, item in ipairs(outputArray) do
        inventoryValue = inventoryValue .. item .. "\n"
    end
    for _, item in ipairs(outputArray2) do
        inventoryValue2 = inventoryValue2 .. item .. "\n"
    end
    local sworditem = {}
    local Accessoryitem = {}
    local fruititem = {}
    local gunitem = {}
    local fruititem = {}
    local acctype = {}
    for _, item in ipairs(outputArray2) do
        if item:find("^Other") then
            local cleanedItem = item:gsub("^Other %s*", "")
            if cleanedItem == 'Spirit Fruit' or cleanedItem == 'Dough Fruit' or cleanedItem == 'Control Fruit' or cleanedItem == 'Gravity Fruit' or cleanedItem == 'Buddha Fruit' or cleanedItem == 'Portal Fruit' or cleanedItem == 'Phoenix Fruit' or cleanedItem == 'Venom Fruit' or cleanedItem == 'Dragon Fruit' or cleanedItem == 'Shadow Fruit' then
                table.insert(fruititem, cleanedItem)
            end
        end
    end

    for _, item in ipairs(outputArray) do
        if item:find("^Other") then
            local cleanedItem = item:gsub("^Other %s*", "")
            if cleanedItem == 'Valkyrie Helm' then
                table.insert(Accessoryitem, cleanedItem)
                table.insert(acctype, 'MÅ©')
            elseif  cleanedItem == 'Cursed Dual Katana' or cleanedItem == "Hallow Scythe" then
                if cleanedItem == 'Cursed Dual Katana' then
                    table.insert(acctype, 'CDK')
                elseif cleanedItem == 'Hallow Scythe' then
                    table.insert(acctype, 'HS')
                end
                table.insert(sworditem, cleanedItem)
            elseif cleanedItem == "Soul Guitar" or cleanedItem == 'Acidum Rifle' then
                if cleanedItem == "Soul Guitar" then
                    table.insert(acctype, "SG")
                end
                table.insert(gunitem,cleanedItem)
            end
        end
    end
    local beli = game.Players.LocalPlayer.Data.Beli.Value
    local frag = game.Players.LocalPlayer.Data.Fragments.Value
    local race = game.Players.LocalPlayer.Data.Race.Value
    local fruit = game.Players.LocalPlayer.Data.DevilFruit.Value
    local level = game.Players.LocalPlayer.Data.Level.Value
    if fruit == '' then
        fruit = 'None'
    end

    local beliFormatted = formatNumberWithCommas(beli)
    local fragFormatted = formatNumberWithCommas(frag)
    local levelFormatted = formatNumberWithCommas(level)
    local bountyformatted = formatNumberWithCommas(bounty)

    local function createWebhookData()
        local webhookcheck = detectExecutor()
        if table.concat(sworditem) == "" then
            table.insert(sworditem, 'None')
        elseif table.concat(gunitem) == "" then
            table.insert(gunitem, 'None')
        elseif table.concat(Accessoryitem) == "" then
            table.insert(Accessoryitem, 'None')
        elseif table.concat(fruititem) == "" then
            table.insert(fruititem, 'None')
        end
        local swordvalue = table.concat(sworditem, "\n")
        local gunvalue  = table.concat(gunitem, "\n")
        local Accessoryvalue = table.concat(Accessoryitem, "\n")
        local fruitvalue = table.concat(fruititem, "\n")
        local RAMAccount = loadstring(game:HttpGet'https://raw.githubusercontent.com/ic3w0lf22/Roblox-Account-Manager/master/RAMAccount.lua')()
        local acctypenoti = table.concat(acctype, "|")
        local MyAccount = RAMAccount.new(game:GetService'Players'.LocalPlayer.Name)
            
        local newalias = acctypenoti
        print(acctypenoti)
        local Account = MyAccount:SetDescription(string.format("Level: %s |%s",levelFormatted,acctypenoti))
    
        local data = {
            ["username"] = Name,
            ["footer"] = {text = 'Code By Seria: https://discord.gg/hngaming'},
            ["description"] = "\<:0_:1205508758390833212>\<:1_:1205508760139862016>\<:2_:1205508762610176000>\<:3_:1205508769795014686>\<:4_:1205508771716014101>\<:5_:1205508773855109211>\<:6_:1205508775667044463>\<:7_:1205508777651085382>\<:8_:1205508779982987315>",
            ["content"] = "https://discord.gg/hngaming https://discord.gg/gNRjjybPFG",
            ["embeds"] = {
                {
                    ["title"] = GAMENAME,
                    ["fields"] = {
                        {
                            ["name"] = "Game Info",
                            ["value"] = string.format("**Game:** %s\n**Game Id**: %d\n**Exploit:** %s",
                                                    GAMENAME, game.PlaceId, webhookcheck),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "User Info",
                            ["value"] = string.format("**User ID:** ||%d||\n**Username:** ||%s||\n**Account Age:** %d",
                                                      Userid, Name, AccountAge),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Job Id",
                            ["value"] = string.format("```\n%s\n```", ConsoleJobId),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Player Stats",
                            ["value"] = string.format("**Level:** %s\n**Beli:** %s\n**Frag:** %s\n**Race:** %s\n**Fruit:** %s\n**Bounty/Honor: **%s",
                                                    levelFormatted, beliFormatted, fragFormatted, race, fruit,bountyformatted),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Script Info",
                            ["value"] = string.format("**Country: ** %s\n**Hwid:** ```%s\n```",
                                                    Country, GetHwid),
                            ["inline"] = true
                        },
                        {
                            ["name"] = '**Sword**',
                            ["value"] = string.format('```%s```',swordvalue),
                            ["inline"] = true
                        },
                        {
                            ["name"] = '**Gun**',
                            ["value"] = string.format('```%s```',gunvalue),
                            ["inline"] = true
                        },
                        {
                            ["name"] = '**Accessory**',
                            ["value"] = string.format('```%s```',Accessoryvalue),
                            ["inline"] = true
                        },
                        {
                            ["name"] = '**Fruit**',
                            ["value"] = string.format('```%s```',fruitvalue),
                            ["inline"] = true
                        },
                        {
                            ["name"] = '**Loáº¡i Acc**',
                            ["value"] = string.format('```%s```', table.concat(acctype, "\n")),
                            ["inline"] = true
                        }
                    },
                }
            }
        }
        
        return HttpService:JSONEncode(data)
    end
    
    local webhookData = createWebhookData()
    sendWebhook(_G.Webhook, webhookData)
elseif string.find(GAMENAME, "Anime Fighters Simulator") then
    local yen = game:GetService("Players").LocalPlayer.leaderstats["\194\165"].Value
    local rank = game:GetService("Players").LocalPlayer.leaderstats["\194\165"].Value
    local timeshard = game.Players.LocalPlayer.PlayerGui.MainGui.TimeTrialShop.ShardFrame.ShardAmount.Text
    local CurrentWorld = game.Players.LocalPlayer.World.Value
    local yenformat = formatNumberWithCommas(yen)
    local function createWebhookData()
        local webhookcheck = detectExecutor()

        local dataanimeadventures = {
            ["username"] = Name,
            ["footer"] = {text = 'Code By Seria: https://discord.gg/hngaming'},
            ["description"] = "\<:0_:1205508758390833212>\<:1_:1205508760139862016>\<:2_:1205508762610176000>\<:3_:1205508769795014686>\<:4_:1205508771716014101>\<:5_:1205508773855109211>\<:6_:1205508775667044463>\<:7_:1205508777651085382>\<:8_:1205508779982987315>",
            ["content"] = "https://discord.gg/hngaming https://discord.gg/gNRjjybPFG",
            ["embeds"] = {
                {
                    ["title"] = GAMENAME,
                    ["fields"] = {
                        {
                            ["name"] = "Game Info",
                            ["value"] = string.format("**Game:** %s \n**Game Id**: %d \n**Exploit:** %s",
                                                        GAMENAME, game.PlaceId, webhookcheck),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "User Info",
                            ["value"] = string.format("**User ID:** ||%d||\n**Username:** ||%s||\n**Account Age:** %d\n**Date:** %s\n**Time:** %s",
                                                    Userid, Name, AccountAge, Date, Time),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Job Id",
                            ["value"] = string.format("```\n%s\n```", ConsoleJobId),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Script Info",
                            ["value"] = string.format("**Country: ** %s\n**Hwid:** ```%s\n```",
                                                    Country, GetHwid),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Player Stat",
                            ["value"] = string.format("**Yen:** %s\n**Rank:** %s\n",
                                                    yenformat, rank),
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Player Item",
                            ["value"] = string.format("**Time Trial Shard:** %s",
                                                    timeshard),
                            ["inline"] = true
                        },
                    },
                    ["type"] = "rich",
                    ["color"] = tonumber("FFD700"), 
                }
            }
        }
        
        return HttpService:JSONEncode(dataanimeadventures)
    end
    
    local webhookData = createWebhookData()
    sendWebhook(_G.Webhook, webhookData)
    print(GAMENAME)
else 
    print(GAMENAME)
    setclipboard(GAMENAME)
end
wait(5)
end
end
main()
